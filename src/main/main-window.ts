import { BrowserWindow, app } from "electron";
import fs from "fs";
import path from "path";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

export let mainWindow: BrowserWindow | null = null;

export const createWindow = (): void => {

    // Obter dimensões da janela

    let windowConfig = { height: 750, width: 700, y: 0, x: 0 };
    const windowConfigPath = path.join(app.getPath("userData"), 'window-config');

    if (fs.existsSync(windowConfigPath)) {
        windowConfig = JSON.parse(fs.readFileSync(windowConfigPath, "utf8"));
    }

    // Create the browser window.
    mainWindow = new BrowserWindow({
        height: windowConfig.height,
        width: windowConfig.width,
        y: windowConfig.y,
        x: windowConfig.x,
        minHeight: 350,
        minWidth: 500,
        autoHideMenuBar: true,
        resizable: true,
        movable: true,
        titleBarStyle: 'hidden',
        webPreferences: {
            preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
            webSecurity: false,
        },
    });

    mainWindow.on('close', () => {

        const bounds = mainWindow.getBounds();

        // Salvar dimensões da janela
        fs.writeFileSync(path.join(app.getPath("userData"), 'window-config'),
        JSON.stringify({ height: bounds.height, width: bounds.width, y: bounds.y, x: bounds.x }), "utf8");
    });

    // and load the index.html of the app.
    mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

    // Open the DevTools.
    // mainWindow.webContents.openDevTools();
};
